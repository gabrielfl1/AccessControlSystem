// <auto-generated />
using System;
using AccessControl.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccessControl.Server.Migrations
{
    [DbContext(typeof(AccessControlSystemDataContext))]
    [Migration("20250909144410_subindoobancocomdados")]
    partial class subindoobancocomdados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AccessControl.Server.Models.AccessRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AccessRules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Regra padrão"
                        });
                });

            modelBuilder.Entity("AccessControl.Server.Models.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Devices", (string)null);
                });

            modelBuilder.Entity("AccessControl.Server.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdDevice")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("AccessControl.Server.Models.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FridayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FridayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MondayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MondayStart")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SaturdayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaturdayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SundayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SundayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThursdayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThursdayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuesdayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuesdayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WednesdayEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WednesdayStart")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Schedules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FridayEnd = 86400,
                            FridayStart = 0,
                            MondayEnd = 86400,
                            MondayStart = 0,
                            Name = "Full Access",
                            SaturdayEnd = 86400,
                            SaturdayStart = 0,
                            SundayEnd = 86400,
                            SundayStart = 0,
                            ThursdayEnd = 86400,
                            ThursdayStart = 0,
                            TuesdayEnd = 86400,
                            TuesdayStart = 0,
                            WednesdayEnd = 86400,
                            WednesdayStart = 0
                        });
                });

            modelBuilder.Entity("AccessControl.Server.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("Card")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataLastLog")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEndLimit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateStartLimit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<uint?>("Pin")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DeviceAccessRules", b =>
                {
                    b.Property<long>("AccessRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessRuleId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceAccessRules");
                });

            modelBuilder.Entity("ScheduleAccessRules", b =>
                {
                    b.Property<long>("AccessRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessRuleId", "ScheduleId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleAccessRules");

                    b.HasData(
                        new
                        {
                            AccessRuleId = 1L,
                            ScheduleId = 1L
                        });
                });

            modelBuilder.Entity("UserAccessRules", b =>
                {
                    b.Property<long>("AccessRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessRuleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccessRules");
                });

            modelBuilder.Entity("DeviceAccessRules", b =>
                {
                    b.HasOne("AccessControl.Server.Models.AccessRule", null)
                        .WithMany()
                        .HasForeignKey("AccessRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleDevice_AccessRuleId");

                    b.HasOne("AccessControl.Server.Models.Device", null)
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleDevice_DeviceId");
                });

            modelBuilder.Entity("ScheduleAccessRules", b =>
                {
                    b.HasOne("AccessControl.Server.Models.AccessRule", null)
                        .WithMany()
                        .HasForeignKey("AccessRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleSchedule_AccessRuleId");

                    b.HasOne("AccessControl.Server.Models.Schedule", null)
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleSchedule_ScheduleId");
                });

            modelBuilder.Entity("UserAccessRules", b =>
                {
                    b.HasOne("AccessControl.Server.Models.AccessRule", null)
                        .WithMany()
                        .HasForeignKey("AccessRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleUser_AccessRuleId");

                    b.HasOne("AccessControl.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccessRuleUser_UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
